{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AppComponent = void 0;\nconst tslib_1 = require(\"tslib\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"@angular/common/http\"));\nconst i2 = tslib_1.__importStar(require(\"@angular/common\"));\nconst i3 = tslib_1.__importStar(require(\"@swimlane/ngx-datatable\"));\nfunction AppComponent_ngx_datatable_column_1_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input\", 4);\n    i0.ɵɵlistener(\"input\", function AppComponent_ngx_datatable_column_1_ng_template_1_Template_input_input_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const column_r3 = restoredCtx.column;\n      const ctx_r4 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r4.updateFilter($event, column_r3.prop));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const column_r3 = ctx.column;\n    i0.ɵɵpropertyInterpolate1(\"placeholder\", \"Filter \", column_r3.name, \"\");\n  }\n}\nfunction AppComponent_ngx_datatable_column_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ngx-datatable-column\", 2);\n    i0.ɵɵtemplate(1, AppComponent_ngx_datatable_column_1_ng_template_1_Template, 1, 1, \"ng-template\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const column_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"prop\", column_r1.prop)(\"name\", column_r1.name);\n  }\n}\nclass AppComponent {\n  constructor(http) {\n    this.http = http;\n    this.rows = [];\n    this.filteredData = [];\n    this.columns = [{\n      prop: 'id',\n      name: 'ID'\n    }, {\n      prop: 'userId',\n      name: 'User ID'\n    }, {\n      prop: 'title',\n      name: 'Title'\n    }, {\n      prop: 'completed',\n      name: 'Completed'\n    }];\n    this.filters = {};\n  }\n  ngOnInit() {\n    this.http.get('https://jsonplaceholder.typicode.com/todos').subscribe(data => {\n      this.rows = data;\n      this.filteredData = [...this.rows];\n    });\n  }\n  updateFilter(event, prop) {\n    const val = event.target.value.toLowerCase();\n    this.filters[prop] = val;\n    this.filteredData = this.rows.filter(item => {\n      for (const key in this.filters) {\n        if (this.filters[key] && item[key].toString().toLowerCase().indexOf(this.filters[key]) === -1) {\n          return false;\n        }\n      }\n      return true;\n    });\n  }\n  static #_ = this.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 2,\n    vars: 6,\n    consts: [[1, \"material\", 3, \"rows\", \"columnMode\", \"headerHeight\", \"footerHeight\", \"rowHeight\"], [3, \"prop\", \"name\", 4, \"ngFor\", \"ngForOf\"], [3, \"prop\", \"name\"], [\"ngx-datatable-header-template\", \"\"], [\"type\", \"text\", 3, \"placeholder\", \"input\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ngx-datatable\", 0);\n        i0.ɵɵtemplate(1, AppComponent_ngx_datatable_column_1_Template, 2, 2, \"ngx-datatable-column\", 1);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"rows\", ctx.filteredData)(\"columnMode\", \"force\")(\"headerHeight\", 50)(\"footerHeight\", 50)(\"rowHeight\", \"auto\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.columns);\n      }\n    },\n    dependencies: [i2.NgForOf, i3.DatatableComponent, i3.DataTableColumnDirective, i3.DataTableColumnHeaderDirective],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\nexports.AppComponent = AppComponent;","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵlistener","AppComponent_ngx_datatable_column_1_ng_template_1_Template_input_input_0_listener","$event","restoredCtx","ɵɵrestoreView","_r5","column_r3","column","ctx_r4","ɵɵnextContext","ɵɵresetView","updateFilter","prop","ɵɵelementEnd","ɵɵpropertyInterpolate1","name","ɵɵtemplate","AppComponent_ngx_datatable_column_1_ng_template_1_Template","ɵɵproperty","column_r1","AppComponent","constructor","http","rows","filteredData","columns","filters","ngOnInit","get","subscribe","data","event","val","target","value","toLowerCase","filter","item","key","toString","indexOf","_","ɵɵdirectiveInject","i1","HttpClient","_2","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","AppComponent_ngx_datatable_column_1_Template","ɵɵadvance","exports"],"sources":["/Volumes/Disk2/ngx-datatable/src/app/app.component.ts","/Volumes/Disk2/ngx-datatable/src/app/app.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\ninterface ApiData {\n  id: number;\n  name: string;\n  data: string; // Adjust the type based on the actual structure of your data field\n}\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  rows: ApiData[] = [];\n  filteredData: ApiData[] = [];\n  columns = [\n    { prop: 'id', name: 'ID' },\n    { prop: 'userId', name: 'User ID' },\n    { prop: 'title', name: 'Title' },\n    { prop: 'completed', name: 'Completed' }\n  ];\n  filters: { [key: string]: string } = {};\n\n  constructor(private http: HttpClient) {}\n\n  ngOnInit() {\n    this.http.get<any[]>('https://jsonplaceholder.typicode.com/todos')\n      .subscribe((data: any) => {\n        this.rows = data;\n        this.filteredData = [...this.rows];\n      });\n  }\n\n  updateFilter(event: any, prop: string) {\n    const val = event.target.value.toLowerCase();\n\n    this.filters[prop] = val;\n\n    this.filteredData = this.rows.filter((item: any) => {\n      for (const key in this.filters) {\n        if (this.filters[key] && item[key].toString().toLowerCase().indexOf(this.filters[key]) === -1) {\n          return false;\n        }\n      }\n      return true;\n    });\n  }\n}","<!-- <ngx-datatable\n  class=\"material\"\n  [rows]=\"filteredData\"\n  [columns]=\"columns\"\n  [columnMode]=\"'force'\"\n  [headerHeight]=\"50\"\n  [footerHeight]=\"50\"\n  [rowHeight]=\"'auto'\">\n  \n  <ngx-datatable-header>\n    <ngx-datatable-column *ngFor=\"let column of columns\">\n      <ng-template ngx-datatable-header-template let-column=\"column\">\n        <input type=\"text\" placeholder=\"Filter {{ column.name }}\" (input)=\"updateFilter($event, column.prop)\">\n      </ng-template>\n    </ngx-datatable-column>\n  </ngx-datatable-header>\n\n  <ngx-datatable-body>\n    <ngx-datatable-row *ngFor=\"let row of filteredData\">\n      <ngx-datatable-column *ngFor=\"let column of columns\">\n        <ng-template ngx-datatable-cell-template let-value=\"value\">\n          {{ row[column.prop] }}\n        </ng-template>\n      </ngx-datatable-column>\n    </ngx-datatable-row>\n  </ngx-datatable-body>\n</ngx-datatable> -->\n\n\n\n<ngx-datatable\n  class=\"material\"\n  [rows]=\"filteredData\"\n  [columnMode]=\"'force'\"\n  [headerHeight]=\"50\"\n  [footerHeight]=\"50\"\n  [rowHeight]=\"'auto'\">\n  \n  <ngx-datatable-column *ngFor=\"let column of columns\" [prop]=\"column.prop\" [name]=\"column.name\">\n    <ng-template ngx-datatable-header-template let-column=\"column\">\n      <input type=\"text\" placeholder=\"Filter {{ column.name }}\" (input)=\"updateFilter($event, column.prop)\">\n    </ng-template>\n  </ngx-datatable-column>\n</ngx-datatable>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}